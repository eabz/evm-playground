    /* "./erc20/base/ERC20.sol":1302:10729  contract ERC20 is Context, IERC20 {... */
  mstore(0x40, 0x80)
    /* "./erc20/base/ERC20.sol":1939:2077  constructor (string memory name_, string memory symbol_) {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
  mload(0x40)
  sub(codesize, bytecodeSize)
  dup1
  bytecodeSize
  dup4
  codecopy
  dup2
  dup2
  add
  0x40
  mstore
  0x40
  dup2
  lt
  iszero
  tag_2
  jumpi
  0x00
  dup1
  revert
tag_2:
  dup2
  add
  swap1
  dup1
  dup1
  mload
  mload(0x40)
  swap4
  swap3
  swap2
  swap1
  dup5
  0x0100000000
  dup3
  gt
  iszero
  tag_3
  jumpi
  0x00
  dup1
  revert
tag_3:
  dup4
  dup3
  add
  swap2
  pop
  0x20
  dup3
  add
  dup6
  dup2
  gt
  iszero
  tag_4
  jumpi
  0x00
  dup1
  revert
tag_4:
  dup3
  mload
  dup7
  0x01
  dup3
  mul
  dup4
  add
  gt
  0x0100000000
  dup3
  gt
  or
  iszero
  tag_5
  jumpi
  0x00
  dup1
  revert
tag_5:
  dup1
  dup4
  mstore
  0x20
  dup4
  add
  swap3
  pop
  pop
  pop
  swap1
  dup1
  mload
  swap1
  0x20
  add
  swap1
  dup1
  dup4
  dup4
  0x00
tag_6:
  dup4
  dup2
  lt
  iszero
  tag_8
  jumpi
  dup1
  dup3
  add
  mload
  dup2
  dup5
  add
  mstore
  0x20
  dup2
  add
  swap1
  pop
  jump(tag_6)
tag_8:
  pop
  pop
  pop
  pop
  swap1
  pop
  swap1
  dup2
  add
  swap1
  0x1f
  and
  dup1
  iszero
  tag_9
  jumpi
  dup1
  dup3
  sub
  dup1
  mload
  0x01
  dup4
  0x20
  sub
  0x0100
  exp
  sub
  not
  and
  dup2
  mstore
  0x20
  add
  swap2
  pop
tag_9:
  pop
  0x40
  mstore
  0x20
  add
  dup1
  mload
  mload(0x40)
  swap4
  swap3
  swap2
  swap1
  dup5
  0x0100000000
  dup3
  gt
  iszero
  tag_10
  jumpi
  0x00
  dup1
  revert
tag_10:
  dup4
  dup3
  add
  swap2
  pop
  0x20
  dup3
  add
  dup6
  dup2
  gt
  iszero
  tag_11
  jumpi
  0x00
  dup1
  revert
tag_11:
  dup3
  mload
  dup7
  0x01
  dup3
  mul
  dup4
  add
  gt
  0x0100000000
  dup3
  gt
  or
  iszero
  tag_12
  jumpi
  0x00
  dup1
  revert
tag_12:
  dup1
  dup4
  mstore
  0x20
  dup4
  add
  swap3
  pop
  pop
  pop
  swap1
  dup1
  mload
  swap1
  0x20
  add
  swap1
  dup1
  dup4
  dup4
  0x00
tag_13:
  dup4
  dup2
  lt
  iszero
  tag_15
  jumpi
  dup1
  dup3
  add
  mload
  dup2
  dup5
  add
  mstore
  0x20
  dup2
  add
  swap1
  pop
  jump(tag_13)
tag_15:
  pop
  pop
  pop
  pop
  swap1
  pop
  swap1
  dup2
  add
  swap1
  0x1f
  and
  dup1
  iszero
  tag_16
  jumpi
  dup1
  dup3
  sub
  dup1
  mload
  0x01
  dup4
  0x20
  sub
  0x0100
  exp
  sub
  not
  and
  dup2
  mstore
  0x20
  add
  swap2
  pop
tag_16:
  pop
  0x40
  mstore
  pop
  pop
  pop
    /* "./erc20/base/ERC20.sol":2014:2019  name_ */
  dup2
    /* "./erc20/base/ERC20.sol":2006:2011  _name */
  0x03
    /* "./erc20/base/ERC20.sol":2006:2019  _name = name_ */
  swap1
  dup1
  mload
  swap1
  0x20
  add
  swap1
  tag_19
  swap3
  swap2
  swap1
  tag_20
  jump	// in
tag_19:
  pop
    /* "./erc20/base/ERC20.sol":2039:2046  symbol_ */
  dup1
    /* "./erc20/base/ERC20.sol":2029:2036  _symbol */
  0x04
    /* "./erc20/base/ERC20.sol":2029:2046  _symbol = symbol_ */
  swap1
  dup1
  mload
  swap1
  0x20
  add
  swap1
  tag_21
  swap3
  swap2
  swap1
  tag_20
  jump	// in
tag_21:
  pop
    /* "./erc20/base/ERC20.sol":2068:2070  18 */
  0x12
    /* "./erc20/base/ERC20.sol":2056:2065  _decimals */
  0x05
  0x00
    /* "./erc20/base/ERC20.sol":2056:2070  _decimals = 18 */
  0x0100
  exp
  dup2
  sload
  dup2
  0xff
  mul
  not
  and
  swap1
  dup4
  0xff
  and
  mul
  or
  swap1
  sstore
  pop
    /* "./erc20/base/ERC20.sol":1939:2077  constructor (string memory name_, string memory symbol_) {... */
  pop
  pop
    /* "./erc20/base/ERC20.sol":1302:10729  contract ERC20 is Context, IERC20 {... */
  jump(tag_22)
tag_20:
  dup3
  dup1
  sload
  0x01
  dup2
  0x01
  and
  iszero
  0x0100
  mul
  sub
  and
  0x02
  swap1
  div
  swap1
  0x00
  mstore
  keccak256(0x00, 0x20)
  swap1
  0x1f
  add
  0x20
  swap1
  div
  dup2
  add
  swap3
  dup3
  tag_24
  jumpi
  0x00
  dup6
  sstore
  jump(tag_23)
tag_24:
  dup3
  0x1f
  lt
  tag_25
  jumpi
  dup1
  mload
  not(0xff)
  and
  dup4
  dup1
  add
  or
  dup6
  sstore
  jump(tag_23)
tag_25:
  dup3
  dup1
  add
  0x01
  add
  dup6
  sstore
  dup3
  iszero
  tag_23
  jumpi
  swap2
  dup3
  add
tag_26:
  dup3
  dup2
  gt
  iszero
  tag_27
  jumpi
  dup3
  mload
  dup3
  sstore
  swap2
  0x20
  add
  swap2
  swap1
  0x01
  add
  swap1
  jump(tag_26)
tag_27:
tag_23:
  pop
  swap1
  pop
  tag_28
  swap2
  swap1
  tag_29
  jump	// in
tag_28:
  pop
  swap1
  jump	// out
tag_29:
tag_30:
  dup1
  dup3
  gt
  iszero
  tag_31
  jumpi
  0x00
  dup2
  0x00
  swap1
  sstore
  pop
  0x01
  add
  jump(tag_30)
tag_31:
  pop
  swap1
  jump	// out
tag_22:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "./erc20/base/ERC20.sol":1302:10729  contract ERC20 is Context, IERC20 {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x39509351
      gt
      tag_14
      jumpi
      dup1
      0x39509351
      eq
      tag_8
      jumpi
      dup1
      0x70a08231
      eq
      tag_9
      jumpi
      dup1
      0x95d89b41
      eq
      tag_10
      jumpi
      dup1
      0xa457c2d7
      eq
      tag_11
      jumpi
      dup1
      0xa9059cbb
      eq
      tag_12
      jumpi
      dup1
      0xdd62ed3e
      eq
      tag_13
      jumpi
      jump(tag_2)
    tag_14:
      dup1
      0x06fdde03
      eq
      tag_3
      jumpi
      dup1
      0x095ea7b3
      eq
      tag_4
      jumpi
      dup1
      0x18160ddd
      eq
      tag_5
      jumpi
      dup1
      0x23b872dd
      eq
      tag_6
      jumpi
      dup1
      0x313ce567
      eq
      tag_7
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "./erc20/base/ERC20.sol":2142:2223  function name() public view returns (string memory) {... */
    tag_3:
      tag_15
      tag_16
      jump	// in
    tag_15:
      mload(0x40)
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      dup4
      dup2
      dup2
      mload
      dup2
      mstore
      0x20
      add
      swap2
      pop
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
      0x00
    tag_17:
      dup4
      dup2
      lt
      iszero
      tag_19
      jumpi
      dup1
      dup3
      add
      mload
      dup2
      dup5
      add
      mstore
      0x20
      dup2
      add
      swap1
      pop
      jump(tag_17)
    tag_19:
      pop
      pop
      pop
      pop
      swap1
      pop
      swap1
      dup2
      add
      swap1
      0x1f
      and
      dup1
      iszero
      tag_20
      jumpi
      dup1
      dup3
      sub
      dup1
      mload
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      not
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
    tag_20:
      pop
      swap3
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./erc20/base/ERC20.sol":4178:4344  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */
    tag_4:
      tag_21
      0x04
      dup1
      calldatasize
      sub
      0x40
      dup2
      lt
      iszero
      tag_22
      jumpi
      0x00
      dup1
      revert
    tag_22:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_23
      jump	// in
    tag_21:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./erc20/base/ERC20.sol":3185:3283  function totalSupply() public view override returns (uint256) {... */
    tag_5:
      tag_24
      tag_25
      jump	// in
    tag_24:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./erc20/base/ERC20.sol":4811:5128  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */
    tag_6:
      tag_26
      0x04
      dup1
      calldatasize
      sub
      0x60
      dup2
      lt
      iszero
      tag_27
      jumpi
      0x00
      dup1
      revert
    tag_27:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_28
      jump	// in
    tag_26:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./erc20/base/ERC20.sol":3044:3125  function decimals() public view returns (uint8) {... */
    tag_7:
      tag_29
      tag_30
      jump	// in
    tag_29:
      mload(0x40)
      dup1
      dup3
      0xff
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./erc20/base/ERC20.sol":5523:5738  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */
    tag_8:
      tag_31
      0x04
      dup1
      calldatasize
      sub
      0x40
      dup2
      lt
      iszero
      tag_32
      jumpi
      0x00
      dup1
      revert
    tag_32:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_33
      jump	// in
    tag_31:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./erc20/base/ERC20.sol":3341:3458  function balanceOf(address account) public view override returns (uint256) {... */
    tag_9:
      tag_34
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_35
      jumpi
      0x00
      dup1
      revert
    tag_35:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_36
      jump	// in
    tag_34:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./erc20/base/ERC20.sol":2336:2421  function symbol() public view returns (string memory) {... */
    tag_10:
      tag_37
      tag_38
      jump	// in
    tag_37:
      mload(0x40)
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      dup4
      dup2
      dup2
      mload
      dup2
      mstore
      0x20
      add
      swap2
      pop
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
      0x00
    tag_39:
      dup4
      dup2
      lt
      iszero
      tag_41
      jumpi
      dup1
      dup3
      add
      mload
      dup2
      dup5
      add
      mstore
      0x20
      dup2
      add
      swap1
      pop
      jump(tag_39)
    tag_41:
      pop
      pop
      pop
      pop
      swap1
      pop
      swap1
      dup2
      add
      swap1
      0x1f
      and
      dup1
      iszero
      tag_42
      jumpi
      dup1
      dup3
      sub
      dup1
      mload
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      not
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
    tag_42:
      pop
      swap3
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./erc20/base/ERC20.sol":6225:6491  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */
    tag_11:
      tag_43
      0x04
      dup1
      calldatasize
      sub
      0x40
      dup2
      lt
      iszero
      tag_44
      jumpi
      0x00
      dup1
      revert
    tag_44:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_45
      jump	// in
    tag_43:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./erc20/base/ERC20.sol":3661:3833  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */
    tag_12:
      tag_46
      0x04
      dup1
      calldatasize
      sub
      0x40
      dup2
      lt
      iszero
      tag_47
      jumpi
      0x00
      dup1
      revert
    tag_47:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_48
      jump	// in
    tag_46:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./erc20/base/ERC20.sol":3891:4040  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */
    tag_13:
      tag_49
      0x04
      dup1
      calldatasize
      sub
      0x40
      dup2
      lt
      iszero
      tag_50
      jumpi
      0x00
      dup1
      revert
    tag_50:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_51
      jump	// in
    tag_49:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./erc20/base/ERC20.sol":2142:2223  function name() public view returns (string memory) {... */
    tag_16:
        /* "./erc20/base/ERC20.sol":2179:2192  string memory */
      0x60
        /* "./erc20/base/ERC20.sol":2211:2216  _name */
      0x03
        /* "./erc20/base/ERC20.sol":2204:2216  return _name */
      dup1
      sload
      0x01
      dup2
      0x01
      and
      iszero
      0x0100
      mul
      sub
      and
      0x02
      swap1
      div
      dup1
      0x1f
      add
      0x20
      dup1
      swap2
      div
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup3
      dup1
      sload
      0x01
      dup2
      0x01
      and
      iszero
      0x0100
      mul
      sub
      and
      0x02
      swap1
      div
      dup1
      iszero
      tag_53
      jumpi
      dup1
      0x1f
      lt
      tag_54
      jumpi
      0x0100
      dup1
      dup4
      sload
      div
      mul
      dup4
      mstore
      swap2
      0x20
      add
      swap2
      jump(tag_53)
    tag_54:
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
    tag_55:
      dup2
      sload
      dup2
      mstore
      swap1
      0x01
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_55
      jumpi
      dup3
      swap1
      sub
      0x1f
      and
      dup3
      add
      swap2
    tag_53:
      pop
      pop
      pop
      pop
      pop
      swap1
      pop
        /* "./erc20/base/ERC20.sol":2142:2223  function name() public view returns (string memory) {... */
      swap1
      jump	// out
        /* "./erc20/base/ERC20.sol":4178:4344  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */
    tag_23:
        /* "./erc20/base/ERC20.sol":4261:4265  bool */
      0x00
        /* "./erc20/base/ERC20.sol":4277:4316  _approve(_msgSender(), spender, amount) */
      tag_57
        /* "./erc20/base/ERC20.sol":4286:4298  _msgSender() */
      tag_58
        /* "./erc20/base/ERC20.sol":4286:4296  _msgSender */
      tag_59
        /* "./erc20/base/ERC20.sol":4286:4298  _msgSender() */
      jump	// in
    tag_58:
        /* "./erc20/base/ERC20.sol":4300:4307  spender */
      dup5
        /* "./erc20/base/ERC20.sol":4309:4315  amount */
      dup5
        /* "./erc20/base/ERC20.sol":4277:4285  _approve */
      tag_60
        /* "./erc20/base/ERC20.sol":4277:4316  _approve(_msgSender(), spender, amount) */
      jump	// in
    tag_57:
        /* "./erc20/base/ERC20.sol":4333:4337  true */
      0x01
        /* "./erc20/base/ERC20.sol":4326:4337  return true */
      swap1
      pop
        /* "./erc20/base/ERC20.sol":4178:4344  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "./erc20/base/ERC20.sol":3185:3283  function totalSupply() public view override returns (uint256) {... */
    tag_25:
        /* "./erc20/base/ERC20.sol":3238:3245  uint256 */
      0x00
        /* "./erc20/base/ERC20.sol":3264:3276  _totalSupply */
      sload(0x02)
        /* "./erc20/base/ERC20.sol":3257:3276  return _totalSupply */
      swap1
      pop
        /* "./erc20/base/ERC20.sol":3185:3283  function totalSupply() public view override returns (uint256) {... */
      swap1
      jump	// out
        /* "./erc20/base/ERC20.sol":4811:5128  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */
    tag_28:
        /* "./erc20/base/ERC20.sol":4917:4921  bool */
      0x00
        /* "./erc20/base/ERC20.sol":4933:4969  _transfer(sender, recipient, amount) */
      tag_63
        /* "./erc20/base/ERC20.sol":4943:4949  sender */
      dup5
        /* "./erc20/base/ERC20.sol":4951:4960  recipient */
      dup5
        /* "./erc20/base/ERC20.sol":4962:4968  amount */
      dup5
        /* "./erc20/base/ERC20.sol":4933:4942  _transfer */
      tag_64
        /* "./erc20/base/ERC20.sol":4933:4969  _transfer(sender, recipient, amount) */
      jump	// in
    tag_63:
        /* "./erc20/base/ERC20.sol":4979:5100  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "ERC20: transfer amount exceeds allowance")) */
      tag_65
        /* "./erc20/base/ERC20.sol":4988:4994  sender */
      dup5
        /* "./erc20/base/ERC20.sol":4996:5008  _msgSender() */
      tag_66
        /* "./erc20/base/ERC20.sol":4996:5006  _msgSender */
      tag_59
        /* "./erc20/base/ERC20.sol":4996:5008  _msgSender() */
      jump	// in
    tag_66:
        /* "./erc20/base/ERC20.sol":5010:5099  _allowances[sender][_msgSender()].sub(amount, "ERC20: transfer amount exceeds allowance") */
      tag_67
        /* "./erc20/base/ERC20.sol":5048:5054  amount */
      dup6
        /* "./erc20/base/ERC20.sol":5010:5099  _allowances[sender][_msgSender()].sub(amount, "ERC20: transfer amount exceeds allowance") */
      mload(0x40)
      dup1
      0x60
      add
      0x40
      mstore
      dup1
      0x28
      dup2
      mstore
      0x20
      add
      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330
      0x28
      swap2
      codecopy
        /* "./erc20/base/ERC20.sol":5010:5021  _allowances */
      0x01
        /* "./erc20/base/ERC20.sol":5010:5029  _allowances[sender] */
      0x00
        /* "./erc20/base/ERC20.sol":5022:5028  sender */
      dup12
        /* "./erc20/base/ERC20.sol":5010:5029  _allowances[sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "./erc20/base/ERC20.sol":5010:5043  _allowances[sender][_msgSender()] */
      0x00
        /* "./erc20/base/ERC20.sol":5030:5042  _msgSender() */
      tag_68
        /* "./erc20/base/ERC20.sol":5030:5040  _msgSender */
      tag_59
        /* "./erc20/base/ERC20.sol":5030:5042  _msgSender() */
      jump	// in
    tag_68:
        /* "./erc20/base/ERC20.sol":5010:5043  _allowances[sender][_msgSender()] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "./erc20/base/ERC20.sol":5010:5047  _allowances[sender][_msgSender()].sub */
      tag_69
      swap1
        /* "./erc20/base/ERC20.sol":5010:5099  _allowances[sender][_msgSender()].sub(amount, "ERC20: transfer amount exceeds allowance") */
      swap3
      swap2
      swap1
      0xffffffff
      and
      jump	// in
    tag_67:
        /* "./erc20/base/ERC20.sol":4979:4987  _approve */
      tag_60
        /* "./erc20/base/ERC20.sol":4979:5100  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "ERC20: transfer amount exceeds allowance")) */
      jump	// in
    tag_65:
        /* "./erc20/base/ERC20.sol":5117:5121  true */
      0x01
        /* "./erc20/base/ERC20.sol":5110:5121  return true */
      swap1
      pop
        /* "./erc20/base/ERC20.sol":4811:5128  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */
      swap4
      swap3
      pop
      pop
      pop
      jump	// out
        /* "./erc20/base/ERC20.sol":3044:3125  function decimals() public view returns (uint8) {... */
    tag_30:
        /* "./erc20/base/ERC20.sol":3085:3090  uint8 */
      0x00
        /* "./erc20/base/ERC20.sol":3109:3118  _decimals */
      0x05
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xff
      and
        /* "./erc20/base/ERC20.sol":3102:3118  return _decimals */
      swap1
      pop
        /* "./erc20/base/ERC20.sol":3044:3125  function decimals() public view returns (uint8) {... */
      swap1
      jump	// out
        /* "./erc20/base/ERC20.sol":5523:5738  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */
    tag_33:
        /* "./erc20/base/ERC20.sol":5611:5615  bool */
      0x00
        /* "./erc20/base/ERC20.sol":5627:5710  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */
      tag_72
        /* "./erc20/base/ERC20.sol":5636:5648  _msgSender() */
      tag_73
        /* "./erc20/base/ERC20.sol":5636:5646  _msgSender */
      tag_59
        /* "./erc20/base/ERC20.sol":5636:5648  _msgSender() */
      jump	// in
    tag_73:
        /* "./erc20/base/ERC20.sol":5650:5657  spender */
      dup5
        /* "./erc20/base/ERC20.sol":5659:5709  _allowances[_msgSender()][spender].add(addedValue) */
      tag_74
        /* "./erc20/base/ERC20.sol":5698:5708  addedValue */
      dup6
        /* "./erc20/base/ERC20.sol":5659:5670  _allowances */
      0x01
        /* "./erc20/base/ERC20.sol":5659:5684  _allowances[_msgSender()] */
      0x00
        /* "./erc20/base/ERC20.sol":5671:5683  _msgSender() */
      tag_75
        /* "./erc20/base/ERC20.sol":5671:5681  _msgSender */
      tag_59
        /* "./erc20/base/ERC20.sol":5671:5683  _msgSender() */
      jump	// in
    tag_75:
        /* "./erc20/base/ERC20.sol":5659:5684  _allowances[_msgSender()] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "./erc20/base/ERC20.sol":5659:5693  _allowances[_msgSender()][spender] */
      0x00
        /* "./erc20/base/ERC20.sol":5685:5692  spender */
      dup10
        /* "./erc20/base/ERC20.sol":5659:5693  _allowances[_msgSender()][spender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "./erc20/base/ERC20.sol":5659:5697  _allowances[_msgSender()][spender].add */
      tag_76
      swap1
        /* "./erc20/base/ERC20.sol":5659:5709  _allowances[_msgSender()][spender].add(addedValue) */
      swap2
      swap1
      0xffffffff
      and
      jump	// in
    tag_74:
        /* "./erc20/base/ERC20.sol":5627:5635  _approve */
      tag_60
        /* "./erc20/base/ERC20.sol":5627:5710  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */
      jump	// in
    tag_72:
        /* "./erc20/base/ERC20.sol":5727:5731  true */
      0x01
        /* "./erc20/base/ERC20.sol":5720:5731  return true */
      swap1
      pop
        /* "./erc20/base/ERC20.sol":5523:5738  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "./erc20/base/ERC20.sol":3341:3458  function balanceOf(address account) public view override returns (uint256) {... */
    tag_36:
        /* "./erc20/base/ERC20.sol":3407:3414  uint256 */
      0x00
        /* "./erc20/base/ERC20.sol":3433:3442  _balances */
      dup1
        /* "./erc20/base/ERC20.sol":3433:3451  _balances[account] */
      0x00
        /* "./erc20/base/ERC20.sol":3443:3450  account */
      dup4
        /* "./erc20/base/ERC20.sol":3433:3451  _balances[account] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "./erc20/base/ERC20.sol":3426:3451  return _balances[account] */
      swap1
      pop
        /* "./erc20/base/ERC20.sol":3341:3458  function balanceOf(address account) public view override returns (uint256) {... */
      swap2
      swap1
      pop
      jump	// out
        /* "./erc20/base/ERC20.sol":2336:2421  function symbol() public view returns (string memory) {... */
    tag_38:
        /* "./erc20/base/ERC20.sol":2375:2388  string memory */
      0x60
        /* "./erc20/base/ERC20.sol":2407:2414  _symbol */
      0x04
        /* "./erc20/base/ERC20.sol":2400:2414  return _symbol */
      dup1
      sload
      0x01
      dup2
      0x01
      and
      iszero
      0x0100
      mul
      sub
      and
      0x02
      swap1
      div
      dup1
      0x1f
      add
      0x20
      dup1
      swap2
      div
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup3
      dup1
      sload
      0x01
      dup2
      0x01
      and
      iszero
      0x0100
      mul
      sub
      and
      0x02
      swap1
      div
      dup1
      iszero
      tag_79
      jumpi
      dup1
      0x1f
      lt
      tag_80
      jumpi
      0x0100
      dup1
      dup4
      sload
      div
      mul
      dup4
      mstore
      swap2
      0x20
      add
      swap2
      jump(tag_79)
    tag_80:
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
    tag_81:
      dup2
      sload
      dup2
      mstore
      swap1
      0x01
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_81
      jumpi
      dup3
      swap1
      sub
      0x1f
      and
      dup3
      add
      swap2
    tag_79:
      pop
      pop
      pop
      pop
      pop
      swap1
      pop
        /* "./erc20/base/ERC20.sol":2336:2421  function symbol() public view returns (string memory) {... */
      swap1
      jump	// out
        /* "./erc20/base/ERC20.sol":6225:6491  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */
    tag_45:
        /* "./erc20/base/ERC20.sol":6318:6322  bool */
      0x00
        /* "./erc20/base/ERC20.sol":6334:6463  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "ERC20: decreased allowance below zero")) */
      tag_83
        /* "./erc20/base/ERC20.sol":6343:6355  _msgSender() */
      tag_84
        /* "./erc20/base/ERC20.sol":6343:6353  _msgSender */
      tag_59
        /* "./erc20/base/ERC20.sol":6343:6355  _msgSender() */
      jump	// in
    tag_84:
        /* "./erc20/base/ERC20.sol":6357:6364  spender */
      dup5
        /* "./erc20/base/ERC20.sol":6366:6462  _allowances[_msgSender()][spender].sub(subtractedValue, "ERC20: decreased allowance below zero") */
      tag_85
        /* "./erc20/base/ERC20.sol":6405:6420  subtractedValue */
      dup6
        /* "./erc20/base/ERC20.sol":6366:6462  _allowances[_msgSender()][spender].sub(subtractedValue, "ERC20: decreased allowance below zero") */
      mload(0x40)
      dup1
      0x60
      add
      0x40
      mstore
      dup1
      0x25
      dup2
      mstore
      0x20
      add
      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8
      0x25
      swap2
      codecopy
        /* "./erc20/base/ERC20.sol":6366:6377  _allowances */
      0x01
        /* "./erc20/base/ERC20.sol":6366:6391  _allowances[_msgSender()] */
      0x00
        /* "./erc20/base/ERC20.sol":6378:6390  _msgSender() */
      tag_86
        /* "./erc20/base/ERC20.sol":6378:6388  _msgSender */
      tag_59
        /* "./erc20/base/ERC20.sol":6378:6390  _msgSender() */
      jump	// in
    tag_86:
        /* "./erc20/base/ERC20.sol":6366:6391  _allowances[_msgSender()] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "./erc20/base/ERC20.sol":6366:6400  _allowances[_msgSender()][spender] */
      0x00
        /* "./erc20/base/ERC20.sol":6392:6399  spender */
      dup11
        /* "./erc20/base/ERC20.sol":6366:6400  _allowances[_msgSender()][spender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "./erc20/base/ERC20.sol":6366:6404  _allowances[_msgSender()][spender].sub */
      tag_69
      swap1
        /* "./erc20/base/ERC20.sol":6366:6462  _allowances[_msgSender()][spender].sub(subtractedValue, "ERC20: decreased allowance below zero") */
      swap3
      swap2
      swap1
      0xffffffff
      and
      jump	// in
    tag_85:
        /* "./erc20/base/ERC20.sol":6334:6342  _approve */
      tag_60
        /* "./erc20/base/ERC20.sol":6334:6463  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "ERC20: decreased allowance below zero")) */
      jump	// in
    tag_83:
        /* "./erc20/base/ERC20.sol":6480:6484  true */
      0x01
        /* "./erc20/base/ERC20.sol":6473:6484  return true */
      swap1
      pop
        /* "./erc20/base/ERC20.sol":6225:6491  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "./erc20/base/ERC20.sol":3661:3833  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */
    tag_48:
        /* "./erc20/base/ERC20.sol":3747:3751  bool */
      0x00
        /* "./erc20/base/ERC20.sol":3763:3805  _transfer(_msgSender(), recipient, amount) */
      tag_88
        /* "./erc20/base/ERC20.sol":3773:3785  _msgSender() */
      tag_89
        /* "./erc20/base/ERC20.sol":3773:3783  _msgSender */
      tag_59
        /* "./erc20/base/ERC20.sol":3773:3785  _msgSender() */
      jump	// in
    tag_89:
        /* "./erc20/base/ERC20.sol":3787:3796  recipient */
      dup5
        /* "./erc20/base/ERC20.sol":3798:3804  amount */
      dup5
        /* "./erc20/base/ERC20.sol":3763:3772  _transfer */
      tag_64
        /* "./erc20/base/ERC20.sol":3763:3805  _transfer(_msgSender(), recipient, amount) */
      jump	// in
    tag_88:
        /* "./erc20/base/ERC20.sol":3822:3826  true */
      0x01
        /* "./erc20/base/ERC20.sol":3815:3826  return true */
      swap1
      pop
        /* "./erc20/base/ERC20.sol":3661:3833  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "./erc20/base/ERC20.sol":3891:4040  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */
    tag_51:
        /* "./erc20/base/ERC20.sol":3980:3987  uint256 */
      0x00
        /* "./erc20/base/ERC20.sol":4006:4017  _allowances */
      0x01
        /* "./erc20/base/ERC20.sol":4006:4024  _allowances[owner] */
      0x00
        /* "./erc20/base/ERC20.sol":4018:4023  owner */
      dup5
        /* "./erc20/base/ERC20.sol":4006:4024  _allowances[owner] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "./erc20/base/ERC20.sol":4006:4033  _allowances[owner][spender] */
      0x00
        /* "./erc20/base/ERC20.sol":4025:4032  spender */
      dup4
        /* "./erc20/base/ERC20.sol":4006:4033  _allowances[owner][spender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "./erc20/base/ERC20.sol":3999:4033  return _allowances[owner][spender] */
      swap1
      pop
        /* "./erc20/base/ERC20.sol":3891:4040  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "./erc20/base/Context.sol":598:702  function _msgSender() internal view virtual returns (address payable) {... */
    tag_59:
        /* "./erc20/base/Context.sol":651:666  address payable */
      0x00
        /* "./erc20/base/Context.sol":685:695  msg.sender */
      caller
        /* "./erc20/base/Context.sol":678:695  return msg.sender */
      swap1
      pop
        /* "./erc20/base/Context.sol":598:702  function _msgSender() internal view virtual returns (address payable) {... */
      swap1
      jump	// out
        /* "./erc20/base/ERC20.sol":9289:9629  function _approve(address owner, address spender, uint256 amount) internal virtual {... */
    tag_60:
        /* "./erc20/base/ERC20.sol":9407:9408  0 */
      0x00
        /* "./erc20/base/ERC20.sol":9390:9409  owner != address(0) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "./erc20/base/ERC20.sol":9390:9395  owner */
      dup4
        /* "./erc20/base/ERC20.sol":9390:9409  owner != address(0) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      eq
      iszero
        /* "./erc20/base/ERC20.sol":9382:9450  require(owner != address(0), "ERC20: approve from the zero address") */
      tag_93
      jumpi
      mload(0x40)
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x04
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x24
      dup2
      mstore
      0x20
      add
      dup1
      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208
      0x24
      swap2
      codecopy
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_93:
        /* "./erc20/base/ERC20.sol":9487:9488  0 */
      0x00
        /* "./erc20/base/ERC20.sol":9468:9489  spender != address(0) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "./erc20/base/ERC20.sol":9468:9475  spender */
      dup3
        /* "./erc20/base/ERC20.sol":9468:9489  spender != address(0) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      eq
      iszero
        /* "./erc20/base/ERC20.sol":9460:9528  require(spender != address(0), "ERC20: approve to the zero address") */
      tag_94
      jumpi
      mload(0x40)
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x04
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x22
      dup2
      mstore
      0x20
      add
      dup1
      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029
      0x22
      swap2
      codecopy
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_94:
        /* "./erc20/base/ERC20.sol":9569:9575  amount */
      dup1
        /* "./erc20/base/ERC20.sol":9539:9550  _allowances */
      0x01
        /* "./erc20/base/ERC20.sol":9539:9557  _allowances[owner] */
      0x00
        /* "./erc20/base/ERC20.sol":9551:9556  owner */
      dup6
        /* "./erc20/base/ERC20.sol":9539:9557  _allowances[owner] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "./erc20/base/ERC20.sol":9539:9566  _allowances[owner][spender] */
      0x00
        /* "./erc20/base/ERC20.sol":9558:9565  spender */
      dup5
        /* "./erc20/base/ERC20.sol":9539:9566  _allowances[owner][spender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "./erc20/base/ERC20.sol":9539:9575  _allowances[owner][spender] = amount */
      dup2
      swap1
      sstore
      pop
        /* "./erc20/base/ERC20.sol":9606:9613  spender */
      dup2
        /* "./erc20/base/ERC20.sol":9590:9622  Approval(owner, spender, amount) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "./erc20/base/ERC20.sol":9599:9604  owner */
      dup4
        /* "./erc20/base/ERC20.sol":9590:9622  Approval(owner, spender, amount) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
        /* "./erc20/base/ERC20.sol":9615:9621  amount */
      dup4
        /* "./erc20/base/ERC20.sol":9590:9622  Approval(owner, spender, amount) */
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log3
        /* "./erc20/base/ERC20.sol":9289:9629  function _approve(address owner, address spender, uint256 amount) internal virtual {... */
      pop
      pop
      pop
      jump	// out
        /* "./erc20/base/ERC20.sol":6965:7495  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */
    tag_64:
        /* "./erc20/base/ERC20.sol":7088:7089  0 */
      0x00
        /* "./erc20/base/ERC20.sol":7070:7090  sender != address(0) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "./erc20/base/ERC20.sol":7070:7076  sender */
      dup4
        /* "./erc20/base/ERC20.sol":7070:7090  sender != address(0) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      eq
      iszero
        /* "./erc20/base/ERC20.sol":7062:7132  require(sender != address(0), "ERC20: transfer from the zero address") */
      tag_96
      jumpi
      mload(0x40)
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x04
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x25
      dup2
      mstore
      0x20
      add
      dup1
      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea
      0x25
      swap2
      codecopy
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_96:
        /* "./erc20/base/ERC20.sol":7171:7172  0 */
      0x00
        /* "./erc20/base/ERC20.sol":7150:7173  recipient != address(0) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "./erc20/base/ERC20.sol":7150:7159  recipient */
      dup3
        /* "./erc20/base/ERC20.sol":7150:7173  recipient != address(0) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      eq
      iszero
        /* "./erc20/base/ERC20.sol":7142:7213  require(recipient != address(0), "ERC20: transfer to the zero address") */
      tag_97
      jumpi
      mload(0x40)
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x04
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x23
      dup2
      mstore
      0x20
      add
      dup1
      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f
      0x23
      swap2
      codecopy
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_97:
        /* "./erc20/base/ERC20.sol":7224:7271  _beforeTokenTransfer(sender, recipient, amount) */
      tag_98
        /* "./erc20/base/ERC20.sol":7245:7251  sender */
      dup4
        /* "./erc20/base/ERC20.sol":7253:7262  recipient */
      dup4
        /* "./erc20/base/ERC20.sol":7264:7270  amount */
      dup4
        /* "./erc20/base/ERC20.sol":7224:7244  _beforeTokenTransfer */
      tag_99
        /* "./erc20/base/ERC20.sol":7224:7271  _beforeTokenTransfer(sender, recipient, amount) */
      jump	// in
    tag_98:
        /* "./erc20/base/ERC20.sol":7302:7373  _balances[sender].sub(amount, "ERC20: transfer amount exceeds balance") */
      tag_100
        /* "./erc20/base/ERC20.sol":7324:7330  amount */
      dup2
        /* "./erc20/base/ERC20.sol":7302:7373  _balances[sender].sub(amount, "ERC20: transfer amount exceeds balance") */
      mload(0x40)
      dup1
      0x60
      add
      0x40
      mstore
      dup1
      0x26
      dup2
      mstore
      0x20
      add
      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6
      0x26
      swap2
      codecopy
        /* "./erc20/base/ERC20.sol":7302:7311  _balances */
      0x00
        /* "./erc20/base/ERC20.sol":7302:7319  _balances[sender] */
      dup1
        /* "./erc20/base/ERC20.sol":7312:7318  sender */
      dup8
        /* "./erc20/base/ERC20.sol":7302:7319  _balances[sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "./erc20/base/ERC20.sol":7302:7323  _balances[sender].sub */
      tag_69
      swap1
        /* "./erc20/base/ERC20.sol":7302:7373  _balances[sender].sub(amount, "ERC20: transfer amount exceeds balance") */
      swap3
      swap2
      swap1
      0xffffffff
      and
      jump	// in
    tag_100:
        /* "./erc20/base/ERC20.sol":7282:7291  _balances */
      0x00
        /* "./erc20/base/ERC20.sol":7282:7299  _balances[sender] */
      dup1
        /* "./erc20/base/ERC20.sol":7292:7298  sender */
      dup6
        /* "./erc20/base/ERC20.sol":7282:7299  _balances[sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "./erc20/base/ERC20.sol":7282:7373  _balances[sender] = _balances[sender].sub(amount, "ERC20: transfer amount exceeds balance") */
      dup2
      swap1
      sstore
      pop
        /* "./erc20/base/ERC20.sol":7406:7438  _balances[recipient].add(amount) */
      tag_101
        /* "./erc20/base/ERC20.sol":7431:7437  amount */
      dup2
        /* "./erc20/base/ERC20.sol":7406:7415  _balances */
      0x00
        /* "./erc20/base/ERC20.sol":7406:7426  _balances[recipient] */
      dup1
        /* "./erc20/base/ERC20.sol":7416:7425  recipient */
      dup6
        /* "./erc20/base/ERC20.sol":7406:7426  _balances[recipient] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "./erc20/base/ERC20.sol":7406:7430  _balances[recipient].add */
      tag_76
      swap1
        /* "./erc20/base/ERC20.sol":7406:7438  _balances[recipient].add(amount) */
      swap2
      swap1
      0xffffffff
      and
      jump	// in
    tag_101:
        /* "./erc20/base/ERC20.sol":7383:7392  _balances */
      0x00
        /* "./erc20/base/ERC20.sol":7383:7403  _balances[recipient] */
      dup1
        /* "./erc20/base/ERC20.sol":7393:7402  recipient */
      dup5
        /* "./erc20/base/ERC20.sol":7383:7403  _balances[recipient] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "./erc20/base/ERC20.sol":7383:7438  _balances[recipient] = _balances[recipient].add(amount) */
      dup2
      swap1
      sstore
      pop
        /* "./erc20/base/ERC20.sol":7470:7479  recipient */
      dup2
        /* "./erc20/base/ERC20.sol":7453:7488  Transfer(sender, recipient, amount) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "./erc20/base/ERC20.sol":7462:7468  sender */
      dup4
        /* "./erc20/base/ERC20.sol":7453:7488  Transfer(sender, recipient, amount) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
        /* "./erc20/base/ERC20.sol":7481:7487  amount */
      dup4
        /* "./erc20/base/ERC20.sol":7453:7488  Transfer(sender, recipient, amount) */
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log3
        /* "./erc20/base/ERC20.sol":6965:7495  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */
      pop
      pop
      pop
      jump	// out
        /* "./erc20/base/SafeMath.sol":5242:5405  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */
    tag_69:
        /* "./erc20/base/SafeMath.sol":5328:5335  uint256 */
      0x00
        /* "./erc20/base/SafeMath.sol":5360:5361  a */
      dup4
        /* "./erc20/base/SafeMath.sol":5355:5356  b */
      dup4
        /* "./erc20/base/SafeMath.sol":5355:5361  b <= a */
      gt
      iszero
        /* "./erc20/base/SafeMath.sol":5363:5375  errorMessage */
      dup3
        /* "./erc20/base/SafeMath.sol":5347:5376  require(b <= a, errorMessage) */
      swap1
      tag_103
      jumpi
      mload(0x40)
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x04
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      dup4
      dup2
      dup2
      mload
      dup2
      mstore
      0x20
      add
      swap2
      pop
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
      0x00
    tag_104:
      dup4
      dup2
      lt
      iszero
      tag_106
      jumpi
      dup1
      dup3
      add
      mload
      dup2
      dup5
      add
      mstore
      0x20
      dup2
      add
      swap1
      pop
      jump(tag_104)
    tag_106:
      pop
      pop
      pop
      pop
      swap1
      pop
      swap1
      dup2
      add
      swap1
      0x1f
      and
      dup1
      iszero
      tag_107
      jumpi
      dup1
      dup3
      sub
      dup1
      mload
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      not
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
    tag_107:
      pop
      swap3
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_103:
      pop
        /* "./erc20/base/SafeMath.sol":5397:5398  b */
      dup3
        /* "./erc20/base/SafeMath.sol":5393:5394  a */
      dup5
        /* "./erc20/base/SafeMath.sol":5393:5398  a - b */
      sub
        /* "./erc20/base/SafeMath.sol":5386:5398  return a - b */
      swap1
      pop
        /* "./erc20/base/SafeMath.sol":5242:5405  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */
      swap4
      swap3
      pop
      pop
      pop
      jump	// out
        /* "./erc20/base/SafeMath.sol":2500:2675  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */
    tag_76:
        /* "./erc20/base/SafeMath.sol":2558:2565  uint256 */
      0x00
        /* "./erc20/base/SafeMath.sol":2577:2586  uint256 c */
      dup1
        /* "./erc20/base/SafeMath.sol":2593:2594  b */
      dup3
        /* "./erc20/base/SafeMath.sol":2589:2590  a */
      dup5
        /* "./erc20/base/SafeMath.sol":2589:2594  a + b */
      add
        /* "./erc20/base/SafeMath.sol":2577:2594  uint256 c = a + b */
      swap1
      pop
        /* "./erc20/base/SafeMath.sol":2617:2618  a */
      dup4
        /* "./erc20/base/SafeMath.sol":2612:2613  c */
      dup2
        /* "./erc20/base/SafeMath.sol":2612:2618  c >= a */
      lt
      iszero
        /* "./erc20/base/SafeMath.sol":2604:2650  require(c >= a, "SafeMath: addition overflow") */
      tag_109
      jumpi
      mload(0x40)
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x04
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x1b
      dup2
      mstore
      0x20
      add
      dup1
      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
      dup2
      mstore
      pop
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_109:
        /* "./erc20/base/SafeMath.sol":2667:2668  c */
      dup1
        /* "./erc20/base/SafeMath.sol":2660:2668  return c */
      swap2
      pop
      pop
        /* "./erc20/base/SafeMath.sol":2500:2675  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "./erc20/base/ERC20.sol":10635:10727  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */
    tag_99:
      pop
      pop
      pop
      jump	// out
    stop
    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373
    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373
    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365
    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365
    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373
    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373
    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f

    auxdata: 0xa264697066735822122099bfa25d20d559d3941423f9f70173fbb020a9f8ca81815a8d0d2e07c0272a8764736f6c63430007060033
}
